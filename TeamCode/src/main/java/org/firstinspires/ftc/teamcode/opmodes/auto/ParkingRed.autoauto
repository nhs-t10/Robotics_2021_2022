#init:
    goto clawout

#clawout:
    driveOmni(-1,0,0), after 20cm next;
    setServoPosition("intakeMoverLeft", -1.0), setServoPosition("intakeMoverRight", 1.0), next;
    setServoPower("nateMoverLeft", -1.0), setServoPower("nateMoverRight", 1.0), after 2650ms next;
    setServoPower("nateMoverLeft", 0.0), setServoPower("nateMoverRight", 0.0), next;
    goto sampling

#sampling:
    let CVReading = getCVPositionNumberWhereZeroIsLeftOneIsMiddleAndTwoIsRight(), goto duck

#duck:
    driveOmni(0,1, 0), after 20cm next;
    setMotorPower("Carousel", 1), after 5s next;
    driveOmni(0, -1, 0), after 20cm next;
    driveOmni(-1,0,0), after 50cm next;
    if (CVReading == 0) goto Position1 else if (CVReading == 1) goto Position2 else goto Position3

#Position1:
    positionOne(), when (hasEncodedMovement("ClawMotor") == false) { log("movement done"), next };
    toggleClaw(), next;
    goto finalMovement

#Position2:
    positionTwo(), when (hasEncodedMovement("ClawMotor") == false) { log("movement done"), next };
    toggleClaw(), next;
    goto finalMovement

#Position3:
    positionThree(), when (hasEncodedMovement("ClawMotor") == false) { log("movement done"), next };
    toggleClaw(), next;
    goto finalMovement

#finalMovement:
    driveOmni(0,-1,0), after 8s driveOmni(0,0,0), goto parking

#parking:
    driveRaw(0,0,0,0)