#init:
    goto sampling;

//uses CV, saves CV reading to `value`, moves 10cm forwards so later steps won't bump up against wall
#sampling:
    let value = getCVPositionNumberWhereZeroIsLeftOneIsMiddleAndTwoIsRight(), log(value), after 2000ms next;
    goto clawout

//The robot starts folded up so that it's inside an 18x18 cube. `clawout` folds out the arms to their full extent.
#clawout:
    driveOmni(0.5,0,0),after 5cm next;
    setServoPosition("intakeMoverLeft", -1.0), setServoPosition("intakeMoverRight", 1.0), next;
    setServoPower("nateMoverLeft", -0.5), setServoPower("nateMoverRight", 0.5), after 3500ms next;
    setServoPower("nateMoverLeft", 0.0), setServoPower("nateMoverRight", 0.0), next;
    goto duckSpin

//drive left, turn left, spin carousel for 3sec, drive right
#duckSpin:
    driveOmni(0,-0.7,0), after 83degs next;
    driveOmni(0.7,0,0), after 6cm next;
    setMotorPower("Carousel", -0.7), after 3000ms next;
    setMotorPower("Carousel", 0), next;
    driveOmni(-0.7, 0, 0), after 32cm next;
    driveOmni(0,0.7,0), after 80degs next;
    driveOmni(0,0,0), goto split

#split:
    if(value == 0) goto thirdPosition, if(value == 1) goto secondPosition, if(value == 2) goto firstPosition

#firstPosition:
    positionOne(),  when (hasEncodedMovement("ClawMotor") == false) { log("movement done"), next };
    goto towerDropOff

#secondPosition:
    positionTwo(),  when (hasEncodedMovement("ClawMotor") == false) { log("movement done"), next };
    goto towerDropOff

#thirdPosition:
    positionThree(),  when (hasEncodedMovement("ClawMotor") == false) { log("movement done"), next };
    goto towerDropOff

#towerDropOff:
    driveOmni(0.7,0,0), after 5.5cm next;
    setClawOpen(true), after 500ms goto finalMovement;

#finalMovement:
    driveOmni(-0.7,0,0), after 2cm next;
    setClawOpen(false), positionNeutral(), when (hasEncodedMovement("ClawMotor") == false) next;
    driveOmni(0,-0.7,0), after 83degs next;
    driveOmni(0.7,0,0), after 30cm next;
    driveOmni(0,0,-0.7), after 2cm next;
    goto parking

#parking:
    driveRaw(0,0,0,0)