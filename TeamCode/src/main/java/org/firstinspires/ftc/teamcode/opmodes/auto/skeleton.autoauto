#init:
    goto clawout

//The robot starts folded up so that it's inside an 18x18 cube. `clawout` folds out the arms to their full extent.
#clawout:
    log(2.3s), next;
    setServoPosition("intakeMoverLeft", -1.0), setServoPosition("intakeMoverRight", 1.0), next;
    setServoPower("nateMoverLeft", -1.0), setServoPower("nateMoverRight", 1.0), after 2650ms next;
    setServoPower("nateMoverLeft", 0.0), setServoPower("nateMoverRight", 0.0), next;
    goto sampling


//uses CV, saves CV reading to `value`, moves 10cm forwards so later steps won't bump up against wall
#sampling:
    let value = getCVPositionNumberWhereZeroIsLeftOneIsMiddleAndTwoIsRight(), next;
    driveRaw(1, 1, 1, 1), after 10cm driveRaw(0,0,0,0), goto duckSpin

//drive left, turn left, spin carousel for 3sec, drive right
#duckSpin:
    driveOmni(0,-1,0), after 20in driveOmni(0,0,-1), after 90degs next;
    setMotorPower("Carousel", 1), after 3s setMotorPower("Carousel", 0), next;
    driveOmni(0,0,1), after 90degs driveOmni(0, 1, 0), after 60in next;
    driveOmni(0,0,0), goto split

#split:
    if(value == 0) goto firstPosition, if(value == 1) goto secondPosition, if(value == 2) goto thirdPosition

#firstPosition:
    positionOne(),  when (hasEncodedMovement("ClawMotor") == false) { log("movement done"), next };
    goto towerDropOff

#secondPosition:
    positionTwo(),  when (hasEncodedMovement("ClawMotor") == false) { log("movement done"), next };
    goto towerDropOff

#thirdPosition:
    positionThree(),  when (hasEncodedMovement("ClawMotor") == false) { log("movement done"), next };
    goto towerDropOff

#towerDropOff:
    driveOmni(1,0,0), after 20in driveOmni(0,0,0), next;
    setClawOpen(true), after 3s goto finalMovement;

#finalMovement:
    driveOmni(-1,0,0), after 10cm next;
    setClawOpen(false), next;
    driveOmni(0,0,1), after 90degs next;
    driveOmni(1,0,0), after 30cm next;
    positionNeutral(), goto parking

#parking:
    driveRaw(0,0,0,0)