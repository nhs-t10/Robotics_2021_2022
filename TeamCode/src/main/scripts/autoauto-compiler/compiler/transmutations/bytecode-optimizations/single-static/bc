's/<init>/0':
 ("log@0") getvar  ("ULS!")  (1) callfunction pop
 ("s/afterStatements/0") jmp_l


's/afterStatements/0/stmt/0/after_if_finished_body/3':
 ("@temp3@1")  (true) setvar
 ("s/afterStatements/1/stmt/0") jmp_l


's/afterStatements/0/stmt/0':

 ({"__phi":["@temp0@1","@temp0@2","@temp0@1","@temp0@2"]}) getvar  ("s/afterStatements/0/stmt/0/after_init/1") jmp_l_cond  ("s/afterStatements/0/stmt/0/after_checking/2") jmp_l


's/afterStatements/0/stmt/0/after_init/1':
 ("@temp0@2")  (false) setvar  ("@temp1@1")  ([2000,"ms"]) unit_currentv setvar
 ("s/afterStatements/0/stmt/0/after_checking/2") jmp_l


's/afterStatements/0/stmt/0/after_checking/2':

 ([2000,"ms"]) unit_currentv  ({"__phi":["@temp1@1","@temp1@1"]}) getvar abs_dif  ([2000,"ms"]) cmp_gte  ("s/afterStatements/0/stmt/0/after_if_finished_body/3") jmp_l_cond  ("s/afterStatements/0/stmt/0/after_done/4") jmp_l


's/afterStatements/0/stmt/0/after_done/4':

 ("s/afterStatements/0/stmt/0") yieldto


's/afterStatements/0':
 ("@temp0@1")  (true) setvar
 ("s/afterStatements/0/stmt/0") jmp_l


's/afterStatements/1/stmt/0/after_if_finished_body/7':
 ("@temp6@1")  (true) setvar
 ("s/afterStatements/2/stmt/0") jmp_l


's/afterStatements/1/stmt/0':

 ({"__phi":["@temp3@1","@temp3@1","@temp3@2"]}) getvar  ("s/afterStatements/1/stmt/0/after_init/5") jmp_l_cond  ("s/afterStatements/1/stmt/0/after_checking/6") jmp_l


's/afterStatements/1/stmt/0/after_init/5':
 ("@temp3@2")  (false) setvar  ("@temp4@1")  ([4000,"cm"]) unit_currentv setvar
 ("s/afterStatements/1/stmt/0/after_checking/6") jmp_l


's/afterStatements/1/stmt/0/after_checking/6':

 ([4000,"cm"]) unit_currentv  ({"__phi":["@temp4@1","@temp4@1"]}) getvar abs_dif  ([4000,"cm"]) cmp_gte  ("s/afterStatements/1/stmt/0/after_if_finished_body/7") jmp_l_cond  ("s/afterStatements/1/stmt/0/after_done/8") jmp_l


's/afterStatements/1/stmt/0/after_done/8':

 ("s/afterStatements/1/stmt/0") yieldto


's/afterStatements/2/stmt/0/after_if_finished_body/b':
 ("@temp9@1")  (true) setvar
 ("s/afterStatements/3/stmt/0") jmp_l


's/afterStatements/2/stmt/0':

 ({"__phi":["@temp6@1","@temp6@1","@temp6@2"]}) getvar  ("s/afterStatements/2/stmt/0/after_init/9") jmp_l_cond  ("s/afterStatements/2/stmt/0/after_checking/a") jmp_l


's/afterStatements/2/stmt/0/after_init/9':
 ("@temp6@2")  (false) setvar  ("@temp7@1")  ([29.999999999999996,"degs"]) unit_currentv setvar
 ("s/afterStatements/2/stmt/0/after_checking/a") jmp_l


's/afterStatements/2/stmt/0/after_checking/a':

 ([29.999999999999996,"degs"]) unit_currentv  ({"__phi":["@temp7@1","@temp7@1"]}) getvar abs_dif  ([29.999999999999996,"degs"]) cmp_gte  ("s/afterStatements/2/stmt/0/after_if_finished_body/b") jmp_l_cond  ("s/afterStatements/2/stmt/0/after_done/c") jmp_l


's/afterStatements/2/stmt/0/after_done/c':

 ("s/afterStatements/2/stmt/0") yieldto


's/afterStatements/3/stmt/0/after_if_finished_body/f':
 ("@temp12@1")  (true) setvar
 ("s/afterStatements/4/stmt/0") jmp_l


's/afterStatements/3/stmt/0':

 ({"__phi":["@temp9@1","@temp9@1","@temp9@2"]}) getvar  ("s/afterStatements/3/stmt/0/after_init/d") jmp_l_cond  ("s/afterStatements/3/stmt/0/after_checking/e") jmp_l


's/afterStatements/3/stmt/0/after_init/d':
 ("@temp9@2")  (false) setvar  ("@temp10@1")  ([3,"cm"]) unit_currentv setvar
 ("s/afterStatements/3/stmt/0/after_checking/e") jmp_l


's/afterStatements/3/stmt/0/after_checking/e':

 ([3,"cm"]) unit_currentv  ({"__phi":["@temp10@1","@temp10@1"]}) getvar abs_dif  ([3,"cm"]) cmp_gte  ("s/afterStatements/3/stmt/0/after_if_finished_body/f") jmp_l_cond  ("s/afterStatements/3/stmt/0/after_done/10") jmp_l


's/afterStatements/3/stmt/0/after_done/10':

 ("s/afterStatements/3/stmt/0") yieldto


's/afterStatements/4/stmt/0/after_if_finished_body/13':

 ("s/ifStatements/0") jmp_l


's/afterStatements/4/stmt/0':

 ({"__phi":["@temp12@1","@temp12@1","@temp12@2"]}) getvar  ("s/afterStatements/4/stmt/0/after_init/11") jmp_l_cond  ("s/afterStatements/4/stmt/0/after_checking/12") jmp_l


's/afterStatements/4/stmt/0/after_init/11':
 ("@temp12@2")  (false) setvar  ("@temp13@1")  ([1892160000000000000,"cm"]) unit_currentv setvar
 ("s/afterStatements/4/stmt/0/after_checking/12") jmp_l


's/afterStatements/4/stmt/0/after_checking/12':

 ([1892160000000000000,"cm"]) unit_currentv  ({"__phi":["@temp13@1","@temp13@1"]}) getvar abs_dif  ([1892160000000000000,"cm"]) cmp_gte  ("s/afterStatements/4/stmt/0/after_if_finished_body/13") jmp_l_cond  ("s/afterStatements/4/stmt/0/after_done/14") jmp_l


's/afterStatements/4/stmt/0/after_done/14':

 ("s/afterStatements/4/stmt/0") yieldto


's/ifStatements/0/stmt/0':

 (true)  ("s/ifStatements/0/stmt/0/if_true/15") jmp_l_cond  ("s/ifStatements/0/stmt/0/if_false/16") jmp_l


's/ifStatements/0/stmt/0/if_true/15':
 ("log@0") getvar  ("this works like java")  (1) callfunction pop
 (false)  ("s/ifStatements/1/stmt/0/if_true/1a") jmp_l_cond  ("s/ifStatements/1/stmt/0/if_false/1b") jmp_l


's/ifStatements/0/stmt/0/if_false/16':
 pass
 ("s/ifStatements/0/stmt/0") yieldto


's/ifStatements/0':

 ("s/ifStatements/0/stmt/0") jmp_l


's/ifStatements/1/stmt/0/if_end/1c':

 ("s/ifStatements/2/stmt/0") jmp_l


's/ifStatements/1/stmt/0/if_true/1a':
 ("log@0") getvar  ("fail")  (1) callfunction pop
 ("s/ifStatements/1/stmt/0/if_end/1c") jmp_l


's/ifStatements/1/stmt/0/if_false/1b':
 pass
 ("s/ifStatements/1/stmt/0/if_end/1c") jmp_l


's/ifStatements/2/stmt/0':

 (false)  ("s/ifStatements/2/stmt/0/if_true/1d") jmp_l_cond  ("s/ifStatements/2/stmt/0/if_false/1e") jmp_l


's/ifStatements/2/stmt/0/if_true/1d':
 ("log@0") getvar  ("fail")  (1) callfunction pop
 ("s/ifStatements/2/stmt/0") yieldto


's/ifStatements/2/stmt/0/if_false/1e':

 ("s/letStatements/0") jmp_l


's/letStatements/0':
 ("table@1")  (0) construct_table setvar  ("table@1") getvar  ("foup")  ("jeremy") setprop  ("log@0") getvar  ("table@1") getvar  (1) callfunction pop  ("table@2")  (3) setvar  ("table@2") getvar  ("foofoo")  (2) setprop  ("log@0") getvar  ("table@2") getvar  (1) callfunction pop  ("log@0") getvar  ("table@2") getvar  ("foofoo") getprop  (1) callfunction pop
 ("s/loopingPath/0") jmp_l


's/loopingPath/0':
 ("counter@1")  (0) setvar
 ("s/loopingPath/1") jmp_l


's/loopingPath/1':
 ("counter@2")  ({"__phi":["counter@1","counter@2","counter@2","counter@1"]}) getvar  (1) add setvar  ("log@0") getvar  ("count: ")  ("counter@2") getvar add  (1) callfunction pop
 ("counter@2") getvar  (20) cmp_lt  ("s/loopingPath/2/stmt/0/if_true/22") jmp_l_cond  ("s/loopingPath/2/stmt/0/if_false/23") jmp_l


's/loopingPath/2/stmt/0/if_true/22':

 ("s/loopingPath/1") jmp_l


's/loopingPath/2/stmt/0/if_false/23':

 ("s/functionDefinition/0") jmp_l


'subcat/func_enter/2a':
 ("return@0") getvar  ("e@0") getvar  ("hah") add  (1) callfunction pop  ret



's/functionDefinition/0':
 ("f@1")  ("subcat/func_enter/2a")  ("e")  (3) construct_relation  (1) makefunction setvar  ("log@0") getvar  ("f@1") getvar  (0) callfunction  (1) callfunction pop  ("log@0") getvar  ("f@1") getvar  ("ha")  (1) callfunction  (1) callfunction pop  ("d@1")  ("subcat/func_enter/2e")  ("e")  (24) construct_relation  ("k")  ("fef") construct_relation  (2) makefunction setvar  ("log@0") getvar  ("d@1") getvar  (0) callfunction  (1) callfunction pop  ("log@0") getvar  ("d@1") getvar  (2)  (1) callfunction  (1) callfunction pop  ("log@0") getvar  ("d@1") getvar  (2)  (1)  (2) callfunction  (1) callfunction pop
 ("s/skipWrapping/0") jmp_l


'subcat/func_enter/2e':
 ("return@0") getvar  ("e@0") getvar  ("k@0") getvar  ("oop") add add  (1) callfunction pop  ret



's/skipWrapping/0':

 ("s/dynamicGoto/0") jmp_l


's/dynamicGoto/0':

 ("s/")  ("dgoto")  ("Math@0") getvar  ("floor") getprop  ("Math@0") getvar  ("random") getprop  (0) callfunction  (2) mul  (1) callfunction add add  ("/0") add jmp_l


's/dgoto0/0':
 ("log@0") getvar  ("dgdg")  (1) callfunction pop
 ("s/dgotoWorks/0") jmp_l


's/dgoto1/0':
 ("log@0") getvar  ("dgdg")  (1) callfunction pop
 ("s/dgotoWorks/0") jmp_l


's/dgotoWorks/0':

 ("s/undefinedTesting/0") jmp_l


's/undefinedTesting/0':
 ("u@1")  ("undefinedvariablethatwedontknowof@0") getvar setvar  ("log@0") getvar  ("u@1") getvar  (1) callfunction pop  ("log@0") getvar  ("u@1") getvar  ("sjkdla") getprop  (1) callfunction pop  ("log@0") getvar  (undefined)  (1) callfunction pop
 ("s/mathOps/0") jmp_l


's/mathOps/0':
 ("two@1")  (2) setvar  ("log@0") getvar  ("two@1") getvar  (2) cmp_gte  (1) callfunction pop  ("log@0") getvar  ("two@1") getvar  (3) cmp_gt  (false) cmp_eq  (1) callfunction pop  ("log@0") getvar  ("two@1") getvar  (3) cmp_lt  (1) callfunction pop  ("log@0") getvar  ("two@1") getvar  (2) cmp_lte  (1) callfunction pop  ("log@0") getvar  ("two@1") getvar  (1) construct_table  (2)  (1) construct_table cmp_eq  (1) callfunction pop  ("log@0") getvar  ("two@1") getvar  (2) cmp_eq  (1) callfunction pop  ("log@0") getvar  ("two@1") getvar  ("fefe") cmp_neq  (1) callfunction pop  ("log@0") getvar  ("a")  ("two@1") getvar construct_relation  (1) construct_table  ("b")  (6) construct_relation  (1) construct_table add  ("a")  (2) construct_relation  ("b")  (6) construct_relation  (2) construct_table cmp_eq  (1) callfunction pop  ("log@0") getvar  ("two@1") getvar  ("e") add  ("2e") cmp_eq  (1) callfunction pop  ("log@0") getvar  ("two@1") getvar  (2) add  (4) cmp_eq  (1) callfunction pop  ("log@0") getvar  ("two@1") getvar  (4) div  (0.5) cmp_eq  (1) callfunction pop  ("log@0") getvar  ("two@1") getvar  (2) subtr  (0) cmp_eq  (1) callfunction pop  ("log@0") getvar  (3)  ("two@1") getvar exp  (9) cmp_eq  (1) callfunction pop  ("log@0") getvar  (3)  ("two@1") getvar exp  (9) cmp_eq  (1) callfunction pop  ("log@0") getvar  (3)  ("two@1") getvar mod  (1) cmp_eq  (1) callfunction pop
 ("s/done/0") jmp_l


's/done/0/stmt/0':
 pass
 ("s/done/0/stmt/0") yieldto


's/done/0':

 ("s/done/0/stmt/0") jmp_l


'ENTRY':

 ("s/<init>/0") jmp_l

