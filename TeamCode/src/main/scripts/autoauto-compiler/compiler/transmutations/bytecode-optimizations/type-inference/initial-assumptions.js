module.exports = {
    "var Math@0": {
        type: "object",
        some: "undefined",
        properties: {
            "abs": "Math@0/abs",
            "acos": "Math@0/acos",
            "asin": "Math@0/asin",
            "atan": "Math@0/atan",
            "atan2": "Math@0/atan2",
            "ceil": "Math@0/ceil",
            "clz32": "Math@0/clz32",
            "cos": "Math@0/cos",
            "exp": "Math@0/exp",
            "floor": "Math@0/floor",
            "imul": "Math@0/imul",
            "fround": "Math@0/fround",
            "log": "Math@0/log",
            "max": "Math@0/max",
            "min": "Math@0/min",
            "pow": "Math@0/pow",
            "random": "Math@0/random",
            "round": "Math@0/round",
            "sin": "Math@0/sin",
            "sqrt": "Math@0/sqrt",
            "tan": "Math@0/tan",
            "log10": "Math@0/log10",
            "log2": "Math@0/log2",
            "log1p": "Math@0/log1p",
            "expm1": "Math@0/expm1",
            "cosh": "Math@0/cosh",
            "sinh": "Math@0/sinh",
            "tanh": "Math@0/tanh",
            "acosh": "Math@0/acosh",
            "asinh": "Math@0/asinh",
            "atanh": "Math@0/atanh",
            "hypot": "Math@0/hypot",
            "trunc": "Math@0/trunc",
            "sign": "Math@0/sign",
            "cbrt": "Math@0/cbrt",
            "E": "number",
            "LOG2E": "number",
            "LOG10E": "number",
            "LN2": "number",
            "LN10": "number",
            "PI": "number",
            "SQRT2": "number",
            "SQRT1_2": "number"
        }
    },
    "Math@0/abs": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/acos": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/asin": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/atan": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/atan2": { "type": "function", "args": ["number", "number"], "return": "number|undefined" },
    "Math@0/ceil": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/clz32": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/cos": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/exp": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/floor": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/imul": { "type": "function", "args": ["number", "number"], "return": "number|undefined" },
    "Math@0/fround": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/log": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/max": { "type": "function", "args": ["number", "number"], varargs: "number", "return": "number|undefined" },
    "Math@0/min": { "type": "function", "args": ["number", "number"], varargs: "number", "return": "number|undefined" },
    "Math@0/pow": { "type": "function", "args": ["number", "number"], "return": "number|undefined" },
    "Math@0/random": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/round": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/sin": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/sqrt": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/tan": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/log10": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/log2": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/log1p": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/expm1": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/cosh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/sinh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/tanh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/acosh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/asinh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/atanh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/hypot": { "type": "function", "args": ["number", "number"], "return": "number|undefined" },
    "Math@0/trunc": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/sign": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0/cbrt": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "var log@0": { type: "function", "args": [], varargs: "*", "return": "undefined" },
    "number|undefined": { type: "union", types: ["undefined", "number"] },
    "unit_currentv<>": { type: "bytecode", pop: ["unit"], push: ["number"] },
    "abs_dif<>": { type: "bytecode", pop: ["number", "number"], push: ["number"] },
    
    "int": { type: "alias", typeTo: "number" },
    "float": { type: "alias", typeTo: "number" },
    "double": { type: "alias", typeTo: "number" },
    "long": { type: "alias", typeTo: "number" },
    "short": { type: "alias", typeTo: "number" },
    "byte": { type: "alias", typeTo: "number" },
    
    "char": { type: "alias", typeTo: "string" },
    "String": { type: "alias", typeTo: "string" },
    
    "void": { type: "alias", typeTo: "undefined" },
    
    "number": { type: "primitive", primitive: "number" },
    "undefined": { type: "primitive", primitive: "undefined" },
    "string": { type: "primitive", primitive: "string" },
    "boolean": { type: "primitive", primitive: "boolean" },
    "unit": { type: "primitive", primitive: "unit" },
}