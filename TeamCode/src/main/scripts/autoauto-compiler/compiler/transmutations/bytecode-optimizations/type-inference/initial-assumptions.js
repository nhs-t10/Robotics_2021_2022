module.exports = {
    "Math@0": {
        type: "object",
        properties: {
            "abs": "Math@0/abs",
            "acos": "Math@0/acos",
            "asin": "Math@0/asin",
            "atan": "Math@0/atan",
            "atan2": "Math@0/atan2",
            "ceil": "Math@0/ceil",
            "clz32": "Math@0/clz32",
            "cos": "Math@0/cos",
            "exp": "Math@0/exp",
            "floor": "Math@0/floor",
            "imul": "Math@0/imul",
            "fround": "Math@0/fround",
            "log": "Math@0/log",
            "max": "Math@0/max",
            "min": "Math@0/min",
            "pow": "Math@0/pow",
            "random": "Math@0/random",
            "round": "Math@0/round",
            "sin": "Math@0/sin",
            "sqrt": "Math@0/sqrt",
            "tan": "Math@0/tan",
            "log10": "Math@0/log10",
            "log2": "Math@0/log2",
            "log1p": "Math@0/log1p",
            "expm1": "Math@0/expm1",
            "cosh": "Math@0/cosh",
            "sinh": "Math@0/sinh",
            "tanh": "Math@0/tanh",
            "acosh": "Math@0/acosh",
            "asinh": "Math@0/asinh",
            "atanh": "Math@0/atanh",
            "hypot": "Math@0/hypot",
            "trunc": "Math@0/trunc",
            "sign": "Math@0/sign",
            "cbrt": "Math@0/cbrt",
            "E": "Math@0/E",
            "LOG2E": "Math@0/LOG2E",
            "LOG10E": "Math@0/LOG10E",
            "LN2": "Math@0/LN2",
            "LN10": "Math@0/LN10",
            "PI": "Math@0/PI",
            "SQRT2": "Math@0/SQRT2",
            "SQRT1_2": "Math@0/SQRT1_2"
        }
    },
    "Math@0abs": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0acos": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0asin": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0atan": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0atan2": { "type": "function", "args": ["number", "number"], "return": "number|undefined" },
    "Math@0ceil": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0clz32": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0cos": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0exp": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0floor": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0imul": { "type": "function", "args": ["number", "number"], "return": "number|undefined" },
    "Math@0fround": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0log": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0max": { "type": "function", "args": ["number", "number"], varargs: "number", "return": "number|undefined" },
    "Math@0min": { "type": "function", "args": ["number", "number"], varargs: "number", "return": "number|undefined" },
    "Math@0pow": { "type": "function", "args": ["number", "number"], "return": "number|undefined" },
    "Math@0random": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0round": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0sin": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0sqrt": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0tan": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0log10": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0log2": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0log1p": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0expm1": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0cosh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0sinh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0tanh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0acosh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0asinh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0atanh": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0hypot": { "type": "function", "args": ["number", "number"], "return": "number|undefined" },
    "Math@0trunc": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0sign": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0cbrt": { "type": "function", "args": ["number"], "return": "number|undefined" },
    "Math@0E": "number",
    "Math@0LOG2E": "number",
    "Math@0LOG10E": "number",
    "Math@0LN2": "number",
    "Math@0LN10": "number",
    "Math@0PI": "number",
    "Math@0SQRT2": "number",
    "Math@0SQRT1_2": "number",
    "log@0": { type: "function", "args": [], varargs: "*", "return": "undefined" },
    "number|undefined": { type: "union", types: ["undefined", "number"] },
    "unit_currentv<>": { type: "bytecode", pop: ["unit"], push: ["number"] },
    "abs_dif<>": { type: "bytecode", pop: ["number", "number"], push: ["number"] },
    
    "int": { type: "alias", typeTo: "number" },
    "float": { type: "alias", typeTo: "number" },
    "double": { type: "alias", typeTo: "number" },
    "long": { type: "alias", typeTo: "number" },
    "short": { type: "alias", typeTo: "number" },
    "byte": { type: "alias", typeTo: "number" },
    
    "char": { type: "alias", typeTo: "string" },
    "String": { type: "alias", typeTo: "string" },
    
    "void": { type: "alias", typeTo: "undefined" },
    
    "number": { type: "primitive", primitive: "number" },
    "undefined": { type: "primitive", primitive: "undefined" },
    "string": { type: "primitive", primitive: "string" },
    "boolean": { type: "primitive", primitive: "boolean" },
    "unit": { type: "primitive", primitive: "unit" },
}