s/<init>/0/stmt/0:
"log"
getvar
"ULS!"
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/<init>/0/stmt/1:
undefined
jmp_l
yield
s/<init>/0:
"s/<init>/0/stmt/0"
jmp_l
s/ifStatements/0/stmt/0:
true
"s/ifStatements/0/if_true/1"
jmp_l_cond
"s/ifStatements/0/if_false/2"
jmp_l
yield
s/ifStatements/0/childscope/4/stmt/0:
"log"
getvar
"this works like java"
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/ifStatements/0/childscope/4/stmt/1:
"s/ifStatements/1"
jmp_l
yield
s/ifStatements/0/childscope/4:
"s/ifStatements/0/childscope/4/stmt/0"
jmp_l
s/ifStatements/0/if_true/1:
"s/ifStatements/0/childscope/4/stmt/0"
jmp_l
s/ifStatements/0/if_false/2:
pass
"s/ifStatements/0/if_end/3"
jmp_l
s/ifStatements/0/if_end/3:
"s/ifStatements/0"
jmp_l
s/ifStatements/0:
"s/ifStatements/0/stmt/0"
jmp_l
s/ifStatements/1/stmt/0:
false
"s/ifStatements/1/if_true/5"
jmp_l_cond
"s/ifStatements/1/if_false/6"
jmp_l
s/ifStatements/1/stmt/1:
"s/ifStatements/2"
jmp_l
yield
s/ifStatements/1/if_true/5:
"log"
getvar
"fail"
1
callfunction
pop
"s/ifStatements/1/if_end/7"
jmp_l
s/ifStatements/1/if_false/6:
pass
"s/ifStatements/1/if_end/7"
jmp_l
s/ifStatements/1/if_end/7:
"undefined/stmt/1"
jmp_l
s/ifStatements/1:
"s/ifStatements/1/stmt/0"
jmp_l
s/ifStatements/2/stmt/0:
false
"s/ifStatements/2/if_true/8"
jmp_l_cond
"s/ifStatements/2/if_false/9"
jmp_l
yield
s/ifStatements/2/childscope/b/stmt/0:
"log"
getvar
"fail"
1
callfunction
pop
"s/ifStatements/2/if_end/a"
jmp_l
yield
s/ifStatements/2/childscope/b:
"s/ifStatements/2/childscope/b/stmt/0"
jmp_l
s/ifStatements/2/if_true/8:
"s/ifStatements/2/childscope/b/stmt/0"
jmp_l
s/ifStatements/2/childscope/c/stmt/0:
"s/ifStatements/3"
jmp_l
yield
s/ifStatements/2/childscope/c:
"s/ifStatements/2/childscope/c/stmt/0"
jmp_l
s/ifStatements/2/if_false/9:
"s/ifStatements/2/childscope/c/stmt/0"
jmp_l
s/ifStatements/2/if_end/a:
"s/ifStatements/2"
jmp_l
s/ifStatements/2:
"s/ifStatements/2/stmt/0"
jmp_l
s/ifStatements/3/stmt/0:
undefined
jmp_l
yield
s/ifStatements/3:
"s/ifStatements/3/stmt/0"
jmp_l
s/letStatements/0/stmt/0:
"table"
0
construct_table
setvar
"undefined/stmt/1"
jmp_l
s/letStatements/0/stmt/1:
"s/letStatements/1"
jmp_l
yield
s/letStatements/0:
"s/letStatements/0/stmt/0"
jmp_l
s/letStatements/1/stmt/0:
"table"
getvar
"foup"
"jeremy"
setprop
"undefined/stmt/1"
jmp_l
s/letStatements/1/stmt/1:
"s/letStatements/2"
jmp_l
yield
s/letStatements/1:
"s/letStatements/1/stmt/0"
jmp_l
s/letStatements/2/stmt/0:
"log"
getvar
"table"
getvar
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/letStatements/2/stmt/1:
"s/letStatements/3"
jmp_l
yield
s/letStatements/2:
"s/letStatements/2/stmt/0"
jmp_l
s/letStatements/3/stmt/0:
"table"
3
setvar
"undefined/stmt/1"
jmp_l
s/letStatements/3/stmt/1:
"s/letStatements/4"
jmp_l
yield
s/letStatements/3:
"s/letStatements/3/stmt/0"
jmp_l
s/letStatements/4/stmt/0:
"table"
getvar
"foofoo"
2
setprop
"undefined/stmt/1"
jmp_l
s/letStatements/4/stmt/1:
"s/letStatements/5"
jmp_l
yield
s/letStatements/4:
"s/letStatements/4/stmt/0"
jmp_l
s/letStatements/5/stmt/0:
"log"
getvar
"table"
getvar
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/letStatements/5/stmt/1:
"log"
getvar
"table"
getvar
"foofoo"
getprop
1
callfunction
pop
"undefined/stmt/2"
jmp_l
s/letStatements/5/stmt/2:
"s/letStatements/6"
jmp_l
yield
s/letStatements/5:
"s/letStatements/5/stmt/0"
jmp_l
s/letStatements/6/stmt/0:
undefined
jmp_l
yield
s/letStatements/6:
"s/letStatements/6/stmt/0"
jmp_l
s/loopingPath/0/stmt/0:
"counter"
0
setvar
"undefined/stmt/1"
jmp_l
s/loopingPath/0/stmt/1:
"s/loopingPath/1"
jmp_l
yield
s/loopingPath/0:
"s/loopingPath/0/stmt/0"
jmp_l
s/loopingPath/1/stmt/0:
"counter"
"counter"
undefined
setvar
"undefined/stmt/1"
jmp_l
s/loopingPath/1/stmt/1:
"log"
getvar
"count: "
undefined
1
callfunction
pop
"undefined/stmt/2"
jmp_l
s/loopingPath/1/stmt/2:
"s/loopingPath/2"
jmp_l
yield
s/loopingPath/1:
"s/loopingPath/1/stmt/0"
jmp_l
s/loopingPath/2/stmt/0:
"counter"
false
"s/loopingPath/2/if_true/d"
jmp_l_cond
"s/loopingPath/2/if_false/e"
jmp_l
yield
s/loopingPath/2/childscope/10/stmt/0:
undefined
jmp_l
yield
s/loopingPath/2/childscope/10:
"s/loopingPath/2/childscope/10/stmt/0"
jmp_l
s/loopingPath/2/if_true/d:
"s/loopingPath/2/childscope/10/stmt/0"
jmp_l
s/loopingPath/2/childscope/11/stmt/0:
"s/loopingPath/3"
jmp_l
yield
s/loopingPath/2/childscope/11:
"s/loopingPath/2/childscope/11/stmt/0"
jmp_l
s/loopingPath/2/if_false/e:
"s/loopingPath/2/childscope/11/stmt/0"
jmp_l
s/loopingPath/2/if_end/f:
"s/loopingPath/2"
jmp_l
s/loopingPath/2:
"s/loopingPath/2/stmt/0"
jmp_l
s/loopingPath/3/stmt/0:
undefined
jmp_l
yield
s/loopingPath/3:
"s/loopingPath/3/stmt/0"
jmp_l
s/functionDefinition/0/stmt/0:
"s/functionDefinition/0/func_enter/13"
"e"
getvar
3
construct_relation
1
makefunction
"f"
swap
setvar
"undefined/stmt/1"
jmp_l
s/functionDefinition/0/stmt/1:
"s/functionDefinition/1"
jmp_l
yield
s/functionDefinition/0/func_end/12:
ret
s/functionDefinition/0/func_body/14/childscope/15/stmt/0:
"return"
getvar
"e"
undefined
1
callfunction
pop
"s/functionDefinition/0/func_end/12"
jmp_l
yield
s/functionDefinition/0/func_body/14/childscope/15:
"s/functionDefinition/0/func_body/14/childscope/15/stmt/0"
jmp_l
s/functionDefinition/0/func_enter/13:
"s/functionDefinition/0/func_body/14/childscope/15/stmt/0"
jmp_l
s/functionDefinition/0:
"s/functionDefinition/0/stmt/0"
jmp_l
s/functionDefinition/1/stmt/0:
"log"
getvar
"f"
getvar
0
callfunction
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/functionDefinition/1/stmt/1:
"log"
getvar
"f"
getvar
"ha"
1
callfunction
1
callfunction
pop
"undefined/stmt/2"
jmp_l
s/functionDefinition/1/stmt/2:
"s/functionDefinition/2"
jmp_l
yield
s/functionDefinition/1:
"s/functionDefinition/1/stmt/0"
jmp_l
s/functionDefinition/2/stmt/0:
"d"
"s/functionDefinition/2/func_enter/17"
"e"
getvar
24
construct_relation
"k"
getvar
"fef"
construct_relation
2
makefunction
setvar
"undefined/stmt/1"
jmp_l
s/functionDefinition/2/stmt/1:
"s/functionDefinition/3"
jmp_l
yield
s/functionDefinition/2/func_end/16:
ret
s/functionDefinition/2/func_body/18/childscope/19/stmt/0:
"return"
getvar
"e"
getvar
undefined
1
callfunction
pop
"s/functionDefinition/2/func_end/16"
jmp_l
yield
s/functionDefinition/2/func_body/18/childscope/19:
"s/functionDefinition/2/func_body/18/childscope/19/stmt/0"
jmp_l
s/functionDefinition/2/func_enter/17:
"s/functionDefinition/2/func_body/18/childscope/19/stmt/0"
jmp_l
s/functionDefinition/2:
"s/functionDefinition/2/stmt/0"
jmp_l
s/functionDefinition/3/stmt/0:
"log"
getvar
"d"
getvar
0
callfunction
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/functionDefinition/3/stmt/1:
"log"
getvar
"d"
getvar
2
1
callfunction
1
callfunction
pop
"undefined/stmt/2"
jmp_l
s/functionDefinition/3/stmt/2:
"log"
getvar
"d"
getvar
2
1
2
callfunction
1
callfunction
pop
"undefined/stmt/3"
jmp_l
s/functionDefinition/3/stmt/3:
"s/functionDefinition/4"
jmp_l
yield
s/functionDefinition/3:
"s/functionDefinition/3/stmt/0"
jmp_l
s/functionDefinition/4/stmt/0:
undefined
jmp_l
yield
s/functionDefinition/4:
"s/functionDefinition/4/stmt/0"
jmp_l
s/skipWrapping/0/stmt/0:
undefined
jmp_l
yield
s/skipWrapping/0:
"s/skipWrapping/0/stmt/0"
jmp_l
s/skipWrapping/1/stmt/0:
"log"
getvar
"IF WE GET HERE, SOMETHING IS WRONG!"
1
callfunction
pop
"s/skipWrapping/1"
jmp_l
yield
s/skipWrapping/1:
"s/skipWrapping/1/stmt/0"
jmp_l
s/skipWrapping/2/stmt/0:
undefined
jmp_l
yield
s/skipWrapping/2:
"s/skipWrapping/2/stmt/0"
jmp_l
s/dynamicGoto/0/stmt/0:
"s/"
"dgoto"
"Math"
getvar
"floor"
getprop
"Math"
getvar
"random"
getprop
0
undefined
jmp_l
yield
s/dynamicGoto/0:
"s/dynamicGoto/0/stmt/0"
jmp_l
s/dgoto0/0/stmt/0:
undefined
jmp_l
yield
s/dgoto0/0:
"s/dgoto0/0/stmt/0"
jmp_l
s/dgoto1/0/stmt/0:
undefined
jmp_l
yield
s/dgoto1/0:
"s/dgoto1/0/stmt/0"
jmp_l
s/dgotoWorks/0/stmt/0:
undefined
jmp_l
yield
s/dgotoWorks/0:
"s/dgotoWorks/0/stmt/0"
jmp_l
s/undefinedTesting/0/stmt/0:
"u"
"undefinedvariablethatwedontknowof"
getvar
setvar
"undefined/stmt/1"
jmp_l
s/undefinedTesting/0/stmt/1:
"s/undefinedTesting/1"
jmp_l
yield
s/undefinedTesting/0:
"s/undefinedTesting/0/stmt/0"
jmp_l
s/undefinedTesting/1/stmt/0:
"log"
getvar
"u"
getvar
"u"
getvar
false
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/undefinedTesting/1/stmt/1:
"s/undefinedTesting/2"
jmp_l
yield
s/undefinedTesting/1:
"s/undefinedTesting/1/stmt/0"
jmp_l
s/undefinedTesting/2/stmt/0:
"log"
getvar
"u"
true
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/undefinedTesting/2/stmt/1:
"s/undefinedTesting/3"
jmp_l
yield
s/undefinedTesting/2:
"s/undefinedTesting/2/stmt/0"
jmp_l
s/undefinedTesting/3/stmt/0:
undefined
jmp_l
yield
s/undefinedTesting/3:
"s/undefinedTesting/3/stmt/0"
jmp_l
s/mathOps/0/stmt/0:
"log"
getvar
true
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/0/stmt/1:
"s/mathOps/1"
jmp_l
yield
s/mathOps/0:
"s/mathOps/0/stmt/0"
jmp_l
s/mathOps/1/stmt/0:
"log"
getvar
true
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/1/stmt/1:
"s/mathOps/2"
jmp_l
yield
s/mathOps/1:
"s/mathOps/1/stmt/0"
jmp_l
s/mathOps/2/stmt/0:
"log"
getvar
true
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/2/stmt/1:
"s/mathOps/3"
jmp_l
yield
s/mathOps/2:
"s/mathOps/2/stmt/0"
jmp_l
s/mathOps/3/stmt/0:
"log"
getvar
true
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/3/stmt/1:
"s/mathOps/4"
jmp_l
yield
s/mathOps/3:
"s/mathOps/3/stmt/0"
jmp_l
s/mathOps/4/stmt/0:
"log"
getvar
2
1
construct_table
2
false
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/4/stmt/1:
"s/mathOps/5"
jmp_l
yield
s/mathOps/4:
"s/mathOps/4/stmt/0"
jmp_l
s/mathOps/5/stmt/0:
"log"
getvar
true
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/5/stmt/1:
"s/mathOps/6"
jmp_l
yield
s/mathOps/5:
"s/mathOps/5/stmt/0"
jmp_l
s/mathOps/6/stmt/0:
"log"
getvar
true
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/6/stmt/1:
"s/mathOps/7"
jmp_l
yield
s/mathOps/6:
"s/mathOps/6/stmt/0"
jmp_l
s/mathOps/7/stmt/0:
"log"
getvar
"a"
getvar
2
construct_relation
1
construct_table
"b"
getvar
6
construct_relation
undefined
"a"
getvar
2
construct_relation
"b"
getvar
6
construct_relation
false
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/7/stmt/1:
"s/mathOps/8"
jmp_l
yield
s/mathOps/7:
"s/mathOps/7/stmt/0"
jmp_l
s/mathOps/8/stmt/0:
"log"
getvar
false
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/8/stmt/1:
"s/mathOps/9"
jmp_l
yield
s/mathOps/8:
"s/mathOps/8/stmt/0"
jmp_l
s/mathOps/9/stmt/0:
"log"
getvar
true
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/9/stmt/1:
"s/mathOps/10"
jmp_l
yield
s/mathOps/9:
"s/mathOps/9/stmt/0"
jmp_l
s/mathOps/10/stmt/0:
"log"
getvar
true
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/10/stmt/1:
"s/mathOps/11"
jmp_l
yield
s/mathOps/10:
"s/mathOps/10/stmt/0"
jmp_l
s/mathOps/11/stmt/0:
"log"
getvar
true
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/11/stmt/1:
"s/mathOps/12"
jmp_l
yield
s/mathOps/11:
"s/mathOps/11/stmt/0"
jmp_l
s/mathOps/12/stmt/0:
"log"
getvar
false
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/12/stmt/1:
"s/mathOps/13"
jmp_l
yield
s/mathOps/12:
"s/mathOps/12/stmt/0"
jmp_l
s/mathOps/13/stmt/0:
"log"
getvar
false
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/13/stmt/1:
"s/mathOps/14"
jmp_l
yield
s/mathOps/13:
"s/mathOps/13/stmt/0"
jmp_l
s/mathOps/14/stmt/0:
"log"
getvar
true
1
callfunction
pop
"undefined/stmt/1"
jmp_l
s/mathOps/14/stmt/1:
"s/mathOps/15"
jmp_l
yield
s/mathOps/14:
"s/mathOps/14/stmt/0"
jmp_l
s/mathOps/15/stmt/0:
undefined
jmp_l
yield
s/mathOps/15:
"s/mathOps/15/stmt/0"
jmp_l
s/done/0/stmt/0:
pass
"s/done/0"
jmp_l
yield
s/done/0:
"s/done/0/stmt/0"
jmp_l
ENTRY:
"s/<init>/0"
jmp_l